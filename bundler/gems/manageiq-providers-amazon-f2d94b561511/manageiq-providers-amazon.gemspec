# -*- encoding: utf-8 -*-
# stub: manageiq-providers-amazon 0.1.0 ruby lib

Gem::Specification.new do |s|
  s.name = "manageiq-providers-amazon".freeze
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["ManageIQ Authors".freeze]
  s.bindir = "exe".freeze
  s.date = "2023-09-12"
  s.description = "ManageIQ plugin for the Amazon provider.".freeze
  s.files = [".codeclimate.yml".freeze, ".github/CODEOWNERS".freeze, ".github/workflows/ci.yaml".freeze, ".github/workflows/instance_types.yaml".freeze, ".gitignore".freeze, ".rspec".freeze, ".rspec_ci".freeze, ".rubocop.yml".freeze, ".rubocop_cc.yml".freeze, ".rubocop_local.yml".freeze, ".whitesource".freeze, ".yamllint".freeze, "CHANGELOG.md".freeze, "Gemfile".freeze, "LICENSE.txt".freeze, "README.md".freeze, "Rakefile".freeze, "app/models/authenticator/amazon.rb".freeze, "app/models/manageiq/providers/amazon/agent_coordinator.rb".freeze, "app/models/manageiq/providers/amazon/agent_coordinator_worker.rb".freeze, "app/models/manageiq/providers/amazon/agent_coordinator_worker/runner.rb".freeze, "app/models/manageiq/providers/amazon/agent_coordinator_worker/runner/response_thread.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/auth_key_pair.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/availability_zone.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/cloud_database.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/cloud_database_flavor.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/event_catcher/stream.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/event_parser.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/flavor.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/orchestration_service_option_converter.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/orchestration_stack.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/orchestration_stack/status.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/orchestration_template.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/provision.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/provision/cloning.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/provision/configuration.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/provision/state_machine.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/provision_workflow.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/refresher.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/scanning.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/scanning/job.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/service_instance.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/service_offering.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/service_parameters_set.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/template.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm/operations.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm/operations/guest.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm/operations/power.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm_or_template_shared.rb".freeze, "app/models/manageiq/providers/amazon/cloud_manager/vm_or_template_shared/scanning.rb".freeze, "app/models/manageiq/providers/amazon/container_manager.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/container.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/container_group.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/container_node.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/container_template.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/event_parser.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/refresh_worker/watch_thread.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/refresher.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/service_instance.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/service_offering.rb".freeze, "app/models/manageiq/providers/amazon/container_manager/service_parameters_set.rb".freeze, "app/models/manageiq/providers/amazon/database_types.rb".freeze, "app/models/manageiq/providers/amazon/instance_types.rb".freeze, "app/models/manageiq/providers/amazon/inventory.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/cloud_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/container_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/container_manager/watch_notice.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/network_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/storage_manager/ebs.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/storage_manager/s3.rb".freeze, "app/models/manageiq/providers/amazon/inventory/collector/target_collection.rb".freeze, "app/models/manageiq/providers/amazon/inventory/hash_collection.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/cloud_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/container_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/container_manager/watch_notice.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/network_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/storage_manager/ebs.rb".freeze, "app/models/manageiq/providers/amazon/inventory/parser/storage_manager/s3.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/cloud_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/container_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/container_manager/watch_notice.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/definitions/cloud_collections.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/definitions/network_collections.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/definitions/storage_collections.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/network_manager.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/storage_manager/ebs.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/storage_manager/s3.rb".freeze, "app/models/manageiq/providers/amazon/inventory/persister/target_collection.rb".freeze, "app/models/manageiq/providers/amazon/manager_mixin.rb".freeze, "app/models/manageiq/providers/amazon/network_manager.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/cloud_network.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/cloud_subnet.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/floating_ip.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/load_balancer.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/load_balancer_health_check.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/load_balancer_listener.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/load_balancer_pool.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/load_balancer_pool_member.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/network_port.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/network_router.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/refresher.rb".freeze, "app/models/manageiq/providers/amazon/network_manager/security_group.rb".freeze, "app/models/manageiq/providers/amazon/parser_helper_methods.rb".freeze, "app/models/manageiq/providers/amazon/regions.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/ebs.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/ebs/cloud_volume.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/ebs/cloud_volume_snapshot.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/ebs/refresher.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3/cloud_object_store_container.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3/cloud_object_store_object.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3/refresh_worker.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/amazon/storage_manager/s3/refresher.rb".freeze, "bin/before_install".freeze, "bin/rails".freeze, "bin/setup".freeze, "bin/update".freeze, "bundler.d/.keep".freeze, "config/regions.yml".freeze, "config/secrets.defaults.yml".freeze, "config/settings.yml".freeze, "db/fixtures/aws_database_types.yml".freeze, "db/fixtures/aws_instance_types.yml".freeze, "lib/manageiq/providers/amazon.rb".freeze, "lib/manageiq/providers/amazon/engine.rb".freeze, "lib/manageiq/providers/amazon/version.rb".freeze, "lib/tasks/README.md".freeze, "lib/tasks/amazon.rake".freeze, "lib/tasks_private/database_types.rake".freeze, "lib/tasks_private/instance_types.rake".freeze, "lib/tasks_private/regions.rake".freeze, "lib/tasks_private/release.rake".freeze, "lib/tasks_private/spec.rake".freeze, "locale/.keep".freeze, "manageiq-providers-amazon.gemspec".freeze, "systemd/manageiq-providers-amazon_agent_coordinator.target".freeze, "systemd/manageiq-providers-amazon_agent_coordinator@.service".freeze, "systemd/manageiq-providers-amazon_cloud_manager_event_catcher.target".freeze, "systemd/manageiq-providers-amazon_cloud_manager_event_catcher@.service".freeze, "systemd/manageiq-providers-amazon_cloud_manager_metrics_collector.target".freeze, "systemd/manageiq-providers-amazon_cloud_manager_metrics_collector@.service".freeze, "systemd/manageiq-providers-amazon_cloud_manager_refresh.target".freeze, "systemd/manageiq-providers-amazon_cloud_manager_refresh@.service".freeze, "systemd/manageiq-providers-amazon_container_manager_event_catcher.target".freeze, "systemd/manageiq-providers-amazon_container_manager_event_catcher@.service".freeze, "systemd/manageiq-providers-amazon_container_manager_refresh.target".freeze, "systemd/manageiq-providers-amazon_container_manager_refresh@.service".freeze, "systemd/manageiq-providers-amazon_storage_manager_s3_refresh.target".freeze, "systemd/manageiq-providers-amazon_storage_manager_s3_refresh@.service".freeze]
  s.homepage = "https://github.com/ManageIQ/manageiq-providers-amazon".freeze
  s.licenses = ["Apache-2.0".freeze]
  s.rubygems_version = "3.2.33".freeze
  s.summary = "ManageIQ plugin for the Amazon provider.".freeze

  s.installed_by_version = "3.2.33" if s.respond_to? :installed_by_version

  if s.respond_to? :specification_version then
    s.specification_version = 4
  end

  if s.respond_to? :add_runtime_dependency then
    s.add_runtime_dependency(%q<aws-sdk-core>.freeze, ["~> 3.114"])
    s.add_runtime_dependency(%q<aws-sdk-cloudformation>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-cloudwatch>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-ec2>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-elasticloadbalancing>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-iam>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-rds>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-s3>.freeze, ["~> 1.0", ">= 1.96.1"])
    s.add_runtime_dependency(%q<aws-sdk-servicecatalog>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-sns>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<aws-sdk-sqs>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<net-scp>.freeze, ["~> 1.2"])
    s.add_development_dependency(%q<manageiq-style>.freeze, [">= 0"])
    s.add_development_dependency(%q<simplecov>.freeze, [">= 0.21.2"])
  else
    s.add_dependency(%q<aws-sdk-core>.freeze, ["~> 3.114"])
    s.add_dependency(%q<aws-sdk-cloudformation>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-cloudwatch>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-ec2>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-elasticloadbalancing>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-iam>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-rds>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-s3>.freeze, ["~> 1.0", ">= 1.96.1"])
    s.add_dependency(%q<aws-sdk-servicecatalog>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-sns>.freeze, ["~> 1.0"])
    s.add_dependency(%q<aws-sdk-sqs>.freeze, ["~> 1.0"])
    s.add_dependency(%q<net-scp>.freeze, ["~> 1.2"])
    s.add_dependency(%q<manageiq-style>.freeze, [">= 0"])
    s.add_dependency(%q<simplecov>.freeze, [">= 0.21.2"])
  end
end
