# -*- encoding: utf-8 -*-
# stub: manageiq-providers-openstack 0.1.0 ruby lib

Gem::Specification.new do |s|
  s.name = "manageiq-providers-openstack".freeze
  s.version = "0.1.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["ManageIQ Authors".freeze]
  s.bindir = "exe".freeze
  s.date = "2023-09-12"
  s.description = "ManageIQ plugin for the OpenStack provider.".freeze
  s.files = [".codeclimate.yml".freeze, ".github/CODEOWNERS".freeze, ".github/workflows/ci.yaml".freeze, ".gitignore".freeze, ".rspec".freeze, ".rspec_ci".freeze, ".rubocop.yml".freeze, ".rubocop_cc.yml".freeze, ".rubocop_local.yml".freeze, ".whitesource".freeze, ".yamllint".freeze, "CHANGELOG.md".freeze, "Gemfile".freeze, "LICENSE.txt".freeze, "README.md".freeze, "Rakefile".freeze, "app/decorators/manageiq/providers/openstack/cloud_manager/template_decorator.rb".freeze, "app/models/manageiq/providers/openstack/base_metrics_capture.rb".freeze, "app/models/manageiq/providers/openstack/cinder_manager_mixin.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/auth_key_pair.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/availability_zone.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/availability_zone_null.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/base_template.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/cloud_resource_quota.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/cloud_tenant.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/event_parser.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/flavor.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/host_aggregate.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/orchestration_service_option_converter.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/orchestration_stack.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/orchestration_stack/status.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/orchestration_template.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/placement_group.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision/cloning.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision/configuration.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision/options_helper.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision/volume_attachment.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision_workflow.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/provision_workflow/dialog_field_validation.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/refresher.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/scanning.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/scanning/job.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/snapshot.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/template.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/associate_ip.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/manage_security_groups.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations/configuration.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations/guest.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations/power.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations/relocation.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/operations/snapshot.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/remote_console.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm/resize.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm_or_template_shared.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vm_or_template_shared/scanning.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vnf.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vnf/status.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/vnfd_template.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/volume_snapshot_template.rb".freeze, "app/models/manageiq/providers/openstack/cloud_manager/volume_template.rb".freeze, "app/models/manageiq/providers/openstack/discovery.rb".freeze, "app/models/manageiq/providers/openstack/event_catcher_mixin.rb".freeze, "app/models/manageiq/providers/openstack/event_catcher_runner_mixin.rb".freeze, "app/models/manageiq/providers/openstack/event_parser_common.rb".freeze, "app/models/manageiq/providers/openstack/helper_methods.rb".freeze, "app/models/manageiq/providers/openstack/identity_sync_mixin.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/auth_key_pair.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/cluster.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/event_parser.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/host.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/host/operations.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/host_service_group.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/metrics_capture.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/metrics_collector_worker.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/orchestration_stack.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/refresh_worker.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/refresh_worker/runner.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/refresher.rb".freeze, "app/models/manageiq/providers/openstack/infra_manager/template.rb".freeze, "app/models/manageiq/providers/openstack/inventory.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/cloud_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/helper_methods.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/infra_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/network_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/storage_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/storage_manager/swift_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/collector/target_collection.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/cloud_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/infra_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/network_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/storage_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/parser/storage_manager/swift_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/cloud_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/definitions/cloud_collections.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/definitions/network_collections.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/definitions/orchestration_stack_collections.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/definitions/storage_collections.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/infra_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/network_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/storage_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/storage_manager/swift_manager.rb".freeze, "app/models/manageiq/providers/openstack/inventory/persister/target_collection.rb".freeze, "app/models/manageiq/providers/openstack/manager_mixin.rb".freeze, "app/models/manageiq/providers/openstack/network_manager.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/cloud_network.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/cloud_network/private.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/cloud_network/public.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/cloud_subnet.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/event_parser.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/floating_ip.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/metrics_collector_worker/runner.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/network_port.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/network_router.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/refresher.rb".freeze, "app/models/manageiq/providers/openstack/network_manager/security_group.rb".freeze, "app/models/manageiq/providers/openstack/provider.rb".freeze, "app/models/manageiq/providers/openstack/refresh_parser_common/helper_methods.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/cloud_volume.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/cloud_volume/operations.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/cloud_volume_backup.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/cloud_volume_snapshot.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/cloud_volume_type.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/event_catcher.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/event_catcher/runner.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/event_parser.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/event_target_parser.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/cinder_manager/refresher.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/swift_manager.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/swift_manager/cloud_object_store_container.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/swift_manager/cloud_object_store_object.rb".freeze, "app/models/manageiq/providers/openstack/storage_manager/swift_manager/refresher.rb".freeze, "app/models/manageiq/providers/openstack/swift_manager_mixin.rb".freeze, "bin/before_install".freeze, "bin/rails".freeze, "bin/setup".freeze, "bin/update".freeze, "bundler.d/.keep".freeze, "config/secrets.defaults.yml".freeze, "config/settings.yml".freeze, "content/miq_dialogs/miq_provision_openstack_dialogs_template.yaml".freeze, "lib/manageiq/providers/openstack.rb".freeze, "lib/manageiq/providers/openstack/engine.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_ceilometer_event_converter.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_ceilometer_event_monitor.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_event.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_null_event_monitor.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_rabbit_event_monitor.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_stf_event_converter.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_stf_event_monitor.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_stf_event_receiver.rb".freeze, "lib/manageiq/providers/openstack/legacy/events/openstack_stf_event_test_receiver.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_configuration_parser.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_event_monitor.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/baremetal_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/compute_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/event_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/handle.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/handled_list.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/identity_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/image_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/introspection_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/metering_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/metric_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/multi_tenancy/base.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/multi_tenancy/loop.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/multi_tenancy/none.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/multi_tenancy/option.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/network_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/nfv_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/orchestration_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/pagination/base.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/pagination/marker.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/pagination/none.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/pagination/page_number.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/storage_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/volume_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/openstack_handle/workflow_delegate.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/compute_openstack_handle_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/event_monitor_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/image_openstack_handle_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/metering_event_monitor_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/storage_openstack_handle_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/tenant_openstack_handle_example.rb".freeze, "lib/manageiq/providers/openstack/legacy/test/volume_openstack_handle_example.rb".freeze, "lib/manageiq/providers/openstack/version.rb".freeze, "lib/tasks/README.md".freeze, "lib/tasks_private/openstack.rake".freeze, "lib/tasks_private/spec.rake".freeze, "locale/.keep".freeze, "manageiq-providers-openstack.gemspec".freeze, "systemd/manageiq-providers-openstack_cloud_manager_event_catcher.target".freeze, "systemd/manageiq-providers-openstack_cloud_manager_event_catcher@.service".freeze, "systemd/manageiq-providers-openstack_cloud_manager_metrics_collector.target".freeze, "systemd/manageiq-providers-openstack_cloud_manager_metrics_collector@.service".freeze, "systemd/manageiq-providers-openstack_cloud_manager_refresh.target".freeze, "systemd/manageiq-providers-openstack_cloud_manager_refresh@.service".freeze, "systemd/manageiq-providers-openstack_infra_manager_event_catcher.target".freeze, "systemd/manageiq-providers-openstack_infra_manager_event_catcher@.service".freeze, "systemd/manageiq-providers-openstack_infra_manager_metrics_collector.target".freeze, "systemd/manageiq-providers-openstack_infra_manager_metrics_collector@.service".freeze, "systemd/manageiq-providers-openstack_infra_manager_refresh.target".freeze, "systemd/manageiq-providers-openstack_infra_manager_refresh@.service".freeze, "systemd/manageiq-providers-openstack_network_manager_event_catcher.target".freeze, "systemd/manageiq-providers-openstack_network_manager_event_catcher@.service".freeze, "systemd/manageiq-providers-openstack_storage_manager_cinder_manager_event_catcher.target".freeze, "systemd/manageiq-providers-openstack_storage_manager_cinder_manager_event_catcher@.service".freeze]
  s.homepage = "https://github.com/ManageIQ/manageiq-providers-openstack".freeze
  s.licenses = ["Apache-2.0".freeze]
  s.rubygems_version = "3.2.33".freeze
  s.summary = "ManageIQ plugin for the OpenStack provider.".freeze

  s.installed_by_version = "3.2.33" if s.respond_to? :installed_by_version

  if s.respond_to? :specification_version then
    s.specification_version = 4
  end

  if s.respond_to? :add_runtime_dependency then
    s.add_runtime_dependency(%q<activesupport>.freeze, ["~> 6.0"])
    s.add_runtime_dependency(%q<bunny>.freeze, ["~> 2.1.0"])
    s.add_runtime_dependency(%q<excon>.freeze, ["~> 0.71"])
    s.add_runtime_dependency(%q<fog-openstack>.freeze, ["~> 1.0"])
    s.add_runtime_dependency(%q<more_core_extensions>.freeze, [">= 3.2", "< 5"])
    s.add_runtime_dependency(%q<parallel>.freeze, ["~> 1.12"])
    s.add_development_dependency(%q<manageiq-style>.freeze, [">= 0"])
    s.add_development_dependency(%q<simplecov>.freeze, [">= 0.21.2"])
  else
    s.add_dependency(%q<activesupport>.freeze, ["~> 6.0"])
    s.add_dependency(%q<bunny>.freeze, ["~> 2.1.0"])
    s.add_dependency(%q<excon>.freeze, ["~> 0.71"])
    s.add_dependency(%q<fog-openstack>.freeze, ["~> 1.0"])
    s.add_dependency(%q<more_core_extensions>.freeze, [">= 3.2", "< 5"])
    s.add_dependency(%q<parallel>.freeze, ["~> 1.12"])
    s.add_dependency(%q<manageiq-style>.freeze, [">= 0"])
    s.add_dependency(%q<simplecov>.freeze, [">= 0.21.2"])
  end
end
