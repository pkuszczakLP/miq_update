=begin
#Site Manager API

#Site Manager API

The version of the OpenAPI document: 1.0.0
Contact: autosde@il.ibm.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'cgi'

module AutosdeOpenapiClient
  class VolumeMigrationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param volume_migration [VolumeMigration] 
    # @param [Hash] opts the optional parameters
    # @return [AsyncResponse]
    def volume_migration_post(volume_migration, opts = {})
      data, _status_code, _headers = volume_migration_post_with_http_info(volume_migration, opts)
      data
    end

    # @param volume_migration [VolumeMigration] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(AsyncResponse, Integer, Hash)>] AsyncResponse data, response status code and response headers
    def volume_migration_post_with_http_info(volume_migration, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VolumeMigrationApi.volume_migration_post ...'
      end
      # verify the required parameter 'volume_migration' is set
      if @api_client.config.client_side_validation && volume_migration.nil?
        fail ArgumentError, "Missing the required parameter 'volume_migration' when calling VolumeMigrationApi.volume_migration_post"
      end
      # resource path
      local_var_path = '/volume-migration'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['*/*'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(volume_migration)

      # return_type
      return_type = opts[:debug_return_type] || 'AsyncResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"VolumeMigrationApi.volume_migration_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VolumeMigrationApi#volume_migration_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
